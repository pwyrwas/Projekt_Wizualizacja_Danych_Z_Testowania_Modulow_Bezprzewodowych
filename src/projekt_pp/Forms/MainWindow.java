/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekt_pp.Forms;


import java.awt.BorderLayout;
import javax.xml.parsers.DocumentBuilder;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.xml.transform.TransformerConfigurationException;
import projekt_pp.module;
import xml.xmlFile;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import javax.swing.JTextArea;
import readFile.measureData;
import readFile.measureData2;
import readFile.readFile;
 /*
 * @author Paweł Wyrwas
 * @temat Praca Przejściowa semestr 2015/2016
 * @data ukończenia 14.01.2016
 */
public class MainWindow extends javax.swing.JFrame {

    int deviceId = 0;       //Deklaracja zmiennej odpowiedzialnej za wyswietlanie parametrow polaczenia z ATXMega
    private static File fXmlFile;
    private static String path;
    private static DocumentBuilderFactory dbFactory;
    private static DocumentBuilder dBuilder;
    private static int BOLD;
    final static Charset ENCODING = StandardCharsets.UTF_8;
    public String filepath;
    
    public measureData dataTest1;
    public measureData2 dataTest2;
    public ArrayList<module> arr;
    public String[] dataFromFile;
    public String[] dataFromFile2;
    public float[][] dataTableForChartFinal;
    Boolean bFlagInitialized;
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        bFlagInitialized = false;
        initComponents();
        readDataFromFile1.setVisible(false);
        readDataFromFile2.setVisible(false);
        generateChart1.setVisible(false);
        chartPanel.setVisible(false);
        generateRaport1.setVisible(false);
        generateChart2.setVisible(false);
        generateRaport2.setVisible(false);
        xmlFile dane = new xmlFile();
        arr = dane.loadParametersFromXml();
        moduleCB.removeAllItems();
        for(module m : arr){
            moduleCB.addItem(m.getName());
           }
        bFlagInitialized = true;
        
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        polacz = new javax.swing.JButton();
        jLP1 = new javax.swing.JLayeredPane();
        pTransmWartosc = new javax.swing.JComboBox<>();
        predkoscTransmisji = new javax.swing.JLabel();
        nrPortu = new javax.swing.JLabel();
        nrPortuWartosc = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        konfiguracja = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        chanelCB = new javax.swing.JSpinner();
        modeCB = new javax.swing.JComboBox<>();
        moduleCB = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        deviceIDCB = new javax.swing.JSpinner();
        zapiszParametry = new javax.swing.JButton();
        wizualizacja = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        test3 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        pathTF1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel24 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        test1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jTextField1 = new javax.swing.JTextField();
        pathTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        panel2 = new javax.swing.JPanel();
        chartPanel = new javax.swing.JPanel();
        browseTextFilePath1 = new javax.swing.JButton();
        pathTestFile1 = new javax.swing.JTextField();
        readDataFromFile1 = new javax.swing.JButton();
        generateRaport1 = new javax.swing.JButton();
        raportPanel = new javax.swing.JPanel();
        generateChart1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        browseTextFilePath2 = new javax.swing.JButton();
        generateChart2 = new javax.swing.JButton();
        generateRaport2 = new javax.swing.JButton();
        pathTestFile2 = new javax.swing.JTextField();
        readDataFromFile2 = new javax.swing.JButton();
        raportPanel1 = new javax.swing.JPanel();
        chartPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1050, 700));
        setPreferredSize(new java.awt.Dimension(1273, 750));
        setSize(new java.awt.Dimension(800, 750));

        jPanel1.setBackground(new java.awt.Color(187, 187, 187));
        jPanel1.setForeground(new java.awt.Color(217, 217, 217));
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 113));
        jPanel1.setPreferredSize(new java.awt.Dimension(902, 130));

        polacz.setText("Połącz");
        polacz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polaczActionPerformed(evt);
            }
        });

        jLP1.setToolTipText("");
        jLP1.setVisible(false);

        pTransmWartosc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "75", "110", "150", "300", "600", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200" }));
        pTransmWartosc.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        predkoscTransmisji.setText("Predkosc transmisji:");

        nrPortu.setText("Numer Portu:");

        nrPortuWartosc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1", "COM2", "COM3", "COM4" }));

        jLP1.setLayer(pTransmWartosc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLP1.setLayer(predkoscTransmisji, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLP1.setLayer(nrPortu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLP1.setLayer(nrPortuWartosc, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLP1Layout = new javax.swing.GroupLayout(jLP1);
        jLP1.setLayout(jLP1Layout);
        jLP1Layout.setHorizontalGroup(
            jLP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLP1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nrPortu)
                    .addComponent(predkoscTransmisji))
                .addGap(18, 18, 18)
                .addGroup(jLP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pTransmWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nrPortuWartosc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jLP1Layout.setVerticalGroup(
            jLP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLP1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nrPortuWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nrPortu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLP1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pTransmWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(predkoscTransmisji, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Beagleboone", "ATXMega" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Wybierz urzadzenie:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jLP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(polacz)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(polacz))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(52, 52, 52)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jLabel5.setText("Moduł komunikacyjny:");

        chanelCB.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));

        modeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brak", "Nadajnik", "Odbiornik", "Reapeater" }));

        moduleCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                moduleCBItemStateChanged(evt);
            }
        });
        moduleCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moduleCBActionPerformed(evt);
            }
        });

        jLabel8.setText("Kanał:");

        jLabel7.setText("ID urządzenia:");

        jLabel6.setText("Tryb pracy:");

        deviceIDCB.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        zapiszParametry.setText("Zapisz!");
        zapiszParametry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapiszParametryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5))
                .addGap(54, 54, 54)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(moduleCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chanelCB)
                    .addComponent(deviceIDCB)
                    .addComponent(modeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(zapiszParametry, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(moduleCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(modeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(deviceIDCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chanelCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(zapiszParametry)))
                .addContainerGap())
        );

        javax.swing.GroupLayout konfiguracjaLayout = new javax.swing.GroupLayout(konfiguracja);
        konfiguracja.setLayout(konfiguracjaLayout);
        konfiguracjaLayout.setHorizontalGroup(
            konfiguracjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(konfiguracjaLayout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(522, Short.MAX_VALUE))
        );
        konfiguracjaLayout.setVerticalGroup(
            konfiguracjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(konfiguracjaLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(925, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Konfiguracja", konfiguracja);

        jTextField4.setPreferredSize(new java.awt.Dimension(93, 21));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel19.setText("Wybierz plik do zapisu danych ");

        jTextField5.setPreferredSize(new java.awt.Dimension(93, 21));

        pathTF1.setText("Podaj ścieżkę !");
        pathTF1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pathTF1.setCaretColor(new java.awt.Color(197, 197, 197));
        pathTF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTF1ActionPerformed(evt);
            }
        });

        jLabel22.setText("Krok zwiększania paczki:");

        jLabel18.setText("[bajt]");

        jTextField6.setPreferredSize(new java.awt.Dimension(93, 21));

        jLabel23.setText("[szt.]");

        jLabel14.setText("Rozmiar paczki:");

        jLabel17.setText("[bajt]");

        jButton3.setText("Wybierz plik");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel20.setText(" Ścieżka do pliku:");

        jLabel24.setText("[szt.]");

        jTextField7.setMinimumSize(new java.awt.Dimension(10, 21));
        jTextField7.setPreferredSize(new java.awt.Dimension(93, 21));

        jLabel21.setText("Postęp testu:");

        jLabel15.setText("Ilość powtórzeń:");

        jLabel16.setText("Krok zwiększania paczki:");

        jButton4.setText("Star Testu!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(pathTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(pathTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout test3Layout = new javax.swing.GroupLayout(test3);
        test3.setLayout(test3Layout);
        test3Layout.setHorizontalGroup(
            test3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(test3Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(435, Short.MAX_VALUE))
        );
        test3Layout.setVerticalGroup(
            test3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(test3Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 821, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Test Wydajności", test3);

        jPanel4.setPreferredSize(new java.awt.Dimension(697, 352));

        jTextField3.setPreferredSize(new java.awt.Dimension(93, 21));

        jButton1.setText("Wybierz plik");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.setPreferredSize(new java.awt.Dimension(93, 21));

        jLabel9.setText("Wybierz plik do zapisu danych ");

        jLabel10.setText("[m]");

        jLabel13.setText("Postęp testu:");

        jLabel11.setText("[bajt]");

        jTextField1.setPreferredSize(new java.awt.Dimension(93, 21));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        pathTF.setText("Podaj ścieżkę !");
        pathTF.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pathTF.setCaretColor(new java.awt.Color(197, 197, 197));
        pathTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTFActionPerformed(evt);
            }
        });

        jLabel2.setText("Rozmiar paczki:");

        jLabel12.setText(" Ścieżka do pliku:");

        jLabel25.setText("[szt.]");

        jLabel3.setText("Ilość powtórzeń:");

        jLabel4.setText("Odległość:");

        jButton2.setText("Star Testu!");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(114, 114, 114))
                            .addComponent(pathTF))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pathTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout test1Layout = new javax.swing.GroupLayout(test1);
        test1.setLayout(test1Layout);
        test1Layout.setHorizontalGroup(
            test1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(test1Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(437, Short.MAX_VALUE))
        );
        test1Layout.setVerticalGroup(
            test1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(test1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );

        jTabbedPane2.addTab("Test Transmisji", test1);

        javax.swing.GroupLayout wizualizacjaLayout = new javax.swing.GroupLayout(wizualizacja);
        wizualizacja.setLayout(wizualizacjaLayout);
        wizualizacjaLayout.setHorizontalGroup(
            wizualizacjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        wizualizacjaLayout.setVerticalGroup(
            wizualizacjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Testy", wizualizacja);

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        browseTextFilePath1.setText("Podaj ścieżke");
        browseTextFilePath1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseTextFilePath1ActionPerformed(evt);
            }
        });

        pathTestFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTestFile1ActionPerformed(evt);
            }
        });

        readDataFromFile1.setText("Wczytaj dane!");
        readDataFromFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readDataFromFile1ActionPerformed(evt);
            }
        });

        generateRaport1.setText("Generuj raport");
        generateRaport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateRaport1ActionPerformed(evt);
            }
        });

        raportPanel.setPreferredSize(new java.awt.Dimension(455, 301));

        javax.swing.GroupLayout raportPanelLayout = new javax.swing.GroupLayout(raportPanel);
        raportPanel.setLayout(raportPanelLayout);
        raportPanelLayout.setHorizontalGroup(
            raportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );
        raportPanelLayout.setVerticalGroup(
            raportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        generateChart1.setText("Generuj Wykres");
        generateChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateChart1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(browseTextFilePath1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pathTestFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                                .addComponent(raportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(readDataFromFile1)
                            .addComponent(chartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(generateRaport1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(generateChart1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseTextFilePath1)
                    .addComponent(pathTestFile1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readDataFromFile1))
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(chartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateRaport1)
                            .addComponent(generateChart1))
                        .addGap(43, 43, 43)
                        .addComponent(raportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(735, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Raport z testu transmisji", panel2);

        browseTextFilePath2.setText("Podaj ścieżke");
        browseTextFilePath2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseTextFilePath2ActionPerformed(evt);
            }
        });

        generateChart2.setText("Generuj Wykres");
        generateChart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateChart2ActionPerformed(evt);
            }
        });

        generateRaport2.setText("Generuj raport");
        generateRaport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateRaport2ActionPerformed(evt);
            }
        });

        pathTestFile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTestFile2ActionPerformed(evt);
            }
        });

        readDataFromFile2.setText("Wczytaj dane!");
        readDataFromFile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readDataFromFile2ActionPerformed(evt);
            }
        });

        raportPanel1.setPreferredSize(new java.awt.Dimension(455, 301));

        javax.swing.GroupLayout raportPanel1Layout = new javax.swing.GroupLayout(raportPanel1);
        raportPanel1.setLayout(raportPanel1Layout);
        raportPanel1Layout.setHorizontalGroup(
            raportPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );
        raportPanel1Layout.setVerticalGroup(
            raportPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout chartPanel1Layout = new javax.swing.GroupLayout(chartPanel1);
        chartPanel1.setLayout(chartPanel1Layout);
        chartPanel1Layout.setHorizontalGroup(
            chartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );
        chartPanel1Layout.setVerticalGroup(
            chartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(browseTextFilePath2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pathTestFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(readDataFromFile2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(raportPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chartPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(generateRaport2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(generateChart2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseTextFilePath2)
                    .addComponent(pathTestFile2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readDataFromFile2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateChart2)
                    .addComponent(generateRaport2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(raportPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(chartPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(719, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Raport z testu wydajności", jPanel2);

        jTabbedPane1.addTab("Generowanie Raportów", jTabbedPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1273, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        deviceId = jComboBox1.getSelectedIndex();
        System.out.print(deviceId);
        if(deviceId == 0)
            {
                jLP1.setVisible(false);
            }
        if(deviceId == 1)
            {
                jLP1.setVisible(true);
            }
    }//GEN-LAST:event_jComboBox1ActionPerformed
    private void polaczActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polaczActionPerformed
        System.out.print("Polaczono!");
    }//GEN-LAST:event_polaczActionPerformed
    private void generateRaport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateRaport1ActionPerformed
        raportPanel.removeAll();
        raportPanel.setLayout(new java.awt.BorderLayout());
        JTextArea textfieldRaport = new JTextArea();
        raportPanel.add(textfieldRaport,BorderLayout.CENTER);
        raportPanel.validate();
        double  partOK;
        double  partERR;
        float a1 = (float)dataTest1.getNumberOKPack();
        float b1 = (float)dataTest1.getPackNumber();
        partOK = (double)(100.0*(a1/b1));
        float a2 = (float)dataTest1.getNumberErrPack();
        float b2 = (float)dataTest1.getPackNumber();
        partERR = (double)(100.0*(a2/b2));
        textfieldRaport.append("Nazwa testu \t\t\t"+dataTest1.getTestName()+"\n");
        textfieldRaport.append("Ilość wysłanych paczek: \t\t"+dataTest1.getnumberOfRepeat()+"\t[szt.]\n");
        textfieldRaport.append("Rozmiar paczki: \t\t"+dataTest1.getPackSize()+"\t[bajt]\n");
        textfieldRaport.append("Odległość między modułami komunikacji: \t"+dataTest1.getDistance()+"\t[m]\n");
        textfieldRaport.append("Procent paczek wysłanych poprawnie: \t"+String.format("%.2f", partOK)+"\t%"+"\n");
        textfieldRaport.append("Procent paczek utraconych: \t"+String.format("%.2f", partERR)+"\t%"+"\n");
    }//GEN-LAST:event_generateRaport1ActionPerformed
    private void readDataFromFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readDataFromFile1ActionPerformed
        try {
            readFile plik = new readFile(filepath);
            dataFromFile= plik.OtworzPlik();
            //wyświetlenie prubne pliku w konsoli!
            int i;
            for(i=0; i < dataFromFile.length;i++){
                System.out.println(dataFromFile[i]);
            }
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
        String subjectTest[] = dataFromFile[0].split(" ");
        String numberOfRepeat[] = dataFromFile[1].split("=");
        String packSize[] = dataFromFile[2].split("=");
        String distance[] = dataFromFile[3].split("=");
        String id = null;
        String n = null;
        int s = Integer.valueOf(packSize[1]);
        int d = Integer.valueOf(distance[1]);
        int nr =Integer.valueOf(numberOfRepeat[1]);
        String [][] measureData = new String[(dataFromFile.length - 6)][4];
        //Czytanie danych pomiarowych do zmiennych OK oraz ERR
        int i;
        for(i= 0 ; i < dataFromFile.length - 6;i++)
        {
            String temp[] = dataFromFile[i+6].split(";");
            int j;
            for(j= 0 ; j < 4;j++)
            {
                measureData[i][j] = temp[j];
            }
        }
        String [] tempStatusData = new String[(dataFromFile.length - 6)];
        for(i= 0 ; i < dataFromFile.length - 6;i++)
        {
            tempStatusData[i] = measureData[i][3];
        }
        measureData data = new measureData(subjectTest[0],subjectTest[1],tempStatusData,nr,s,d);
        dataTest1 = data;
        generateChart1.setVisible(true);
        generateRaport1.setVisible(true);
    }//GEN-LAST:event_readDataFromFile1ActionPerformed
    private void pathTestFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTestFile1ActionPerformed
    }//GEN-LAST:event_pathTestFile1ActionPerformed
    private void browseTextFilePath1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseTextFilePath1ActionPerformed
        //Pobranie ścieżki do pliku oraz pobranie danych z pliku do listy elementów string
        File selectedFile;
        JFileChooser fileChooser = new JFileChooser();
        int showOpenDialog = fileChooser.showOpenDialog(null);
        if (showOpenDialog == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            filepath = selectedFile.getAbsolutePath();
            pathTestFile1.setText(filepath);
            if(pathTestFile1 != null)
            {
                readDataFromFile1.setVisible(true);
            }
        }
    }//GEN-LAST:event_browseTextFilePath1ActionPerformed
    private void generateChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateChart1ActionPerformed
        chartPanel.setVisible(true);
        System.out.println(dataTest1.getNumberOKPack());
        System.out.println(dataTest1.getNumberErrPack());
        DefaultPieDataset pieDataset = new DefaultKeyedValuesDataset();
        pieDataset.setValue("Dane Dostarczone", dataTest1.getNumberOKPack());
        pieDataset.setValue("Dane Niedostarczone", dataTest1.getNumberErrPack());
        JFreeChart chart = ChartFactory.createPieChart("Wykres ilustrujący ilość paczek dostarczonych oraz utraconych", pieDataset, true, true, true);
        PiePlot P = (PiePlot)chart.getPlot();
        chartPanel.removeAll();
        chartPanel.setLayout(new java.awt.BorderLayout());
        ChartPanel CP = new ChartPanel(chart);
        chartPanel.add(CP,BorderLayout.CENTER);
        chartPanel.validate();
    }//GEN-LAST:event_generateChart1ActionPerformed
    private void pathTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTFActionPerformed
    }//GEN-LAST:event_pathTFActionPerformed
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    }//GEN-LAST:event_jTextField1ActionPerformed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Stworzenie i wywołanie JFilechooser
        JFileChooser fileChooser = new JFileChooser();
        int showOpenDialog = fileChooser.showOpenDialog(null);
        if (showOpenDialog == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filepath = selectedFile.getAbsolutePath();
            pathTF.setText(filepath);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser2 = new JFileChooser();
        int showOpenDialog2 = fileChooser2.showOpenDialog(null);
        if (showOpenDialog2 == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser2.getSelectedFile();
            String filepath2 = selectedFile.getAbsolutePath();
            pathTF1.setText(filepath2);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private void pathTF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTF1ActionPerformed
    }//GEN-LAST:event_pathTF1ActionPerformed
    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
    }//GEN-LAST:event_jTextField4ActionPerformed
    private void zapiszParametryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapiszParametryActionPerformed
        Object moduleItem = moduleCB.getSelectedItem();
        Object modeItem = modeCB.getSelectedItem();
        Object deviceItem = deviceIDCB.getValue();
        Object chanelItem = chanelCB.getValue();
        module paramModuleToSave = new module(moduleItem.toString(),modeItem.toString(),deviceItem.toString(),chanelItem.toString());
        dbFactory = DocumentBuilderFactory.newInstance();
        try {
            String filepath = "E:\\Dropbox\\studia\\AIR SEM 9\\Projekt_PP\\konfiguracja.xml";
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            Document doc = docBuilder.parse(filepath);
            // Get the root element
            Node comunicationParameter = doc.getFirstChild();
            NodeList item = doc.getElementsByTagName("Module");
            int countItem = item.getLength();
            System.out.print(countItem);
            int x = 0;
            module m = findModule(moduleItem.toString());
            switch (m.getName()){
                case "LoRa":
                x = 0;
                break;
                case "ZigBee":
                x = 1;
                break;
                case "MiWi":
                x = 2;
                break;
                case "nRF24L14":
                x = 3;
                break;
                default:
                break;
            }
            Node module = doc.getElementsByTagName("Module").item(x);
            NodeList list = module.getChildNodes();
            for (int i = 0; i < list.getLength(); i++) {
                Node node = list.item(i);
                // get the salary element, and update the value
                if ("Mode".equals(node.getNodeName())) {
                    node.setTextContent(modeItem.toString());
                }
                if ("deviceID".equals(node.getNodeName())) {
                    node.setTextContent(deviceItem.toString());
                }
                if ("chanel".equals(node.getNodeName())) {
                    node.setTextContent(chanelItem.toString());
                }
            }
            // write the content into xml file
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult(new File(filepath));
            transformer.transform(source, result);
        } catch (ParserConfigurationException pce) {
            pce.printStackTrace();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (SAXException sae) {
            sae.printStackTrace();
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_zapiszParametryActionPerformed
    private void moduleCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moduleCBActionPerformed
    }//GEN-LAST:event_moduleCBActionPerformed
    private void moduleCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_moduleCBItemStateChanged
        if (!bFlagInitialized) return;
        module m = findModule(moduleCB.getItemAt(moduleCB.getSelectedIndex()));
        if( m != null ) {
            chanelCB.setValue(Integer.parseInt(m.getChanel()));
            deviceIDCB.setValue(Integer.parseInt(m.getDeviceId()));
            int x = 0;
            switch (m.getMode()){
                case "Nadajnik":
                x = 1;
                break;
                case "Odbiornik":
                x = 2;
                break;
                case "Reapeater":
                x = 3;
                break;
                default:
                x = 0;
                break;
            }
            modeCB.setSelectedIndex(x);
        }
        xmlFile dane = new xmlFile();
        arr = dane.loadParametersFromXml();
    }//GEN-LAST:event_moduleCBItemStateChanged
    private void browseTextFilePath2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseTextFilePath2ActionPerformed
        File selectedFile;
        JFileChooser fileChooser = new JFileChooser();
        int showOpenDialog = fileChooser.showOpenDialog(null);
        if (showOpenDialog == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            filepath = selectedFile.getAbsolutePath();
            pathTestFile2.setText(filepath);
            if(pathTestFile1 != null)
            {
                readDataFromFile2.setVisible(true);
            }
        }
    }//GEN-LAST:event_browseTextFilePath2ActionPerformed
    private void generateChart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateChart2ActionPerformed
        chartPanel1.setVisible(true);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int i;
        for(i=0;i < dataTableForChartFinal.length;i++)
        {
            dataset.addValue( dataTableForChartFinal[i][1] , String.valueOf(dataTableForChartFinal[i][0])+"[bajt]" , String.valueOf(dataTableForChartFinal[i][2])); 
        }
        JFreeChart barChart = ChartFactory.createBarChart("Wykres przedstawiający średni czas dostarczenia paczki o zadanym rozmiarze.","Rodzaj paczki","Czas [s]",dataset,PlotOrientation.VERTICAL,true,true,true);
        chartPanel1.removeAll();
        chartPanel1.setLayout(new java.awt.BorderLayout());
        ChartPanel CP1 = new ChartPanel(barChart);
        chartPanel1.add(CP1,BorderLayout.CENTER);
        chartPanel1.validate();
    }//GEN-LAST:event_generateChart2ActionPerformed
    private void generateRaport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateRaport2ActionPerformed
        raportPanel1.removeAll();
        raportPanel1.setLayout(new java.awt.BorderLayout());
        JTextArea textfieldRaport1 = new JTextArea();
        raportPanel1.add(textfieldRaport1,BorderLayout.CENTER);
        raportPanel1.validate();
        textfieldRaport1.append("Nazwa testu \t\t\t"+dataTest2.getTestName()+"\n");
        textfieldRaport1.append("Ilość powtórzeń wysłania\npakietu paczek: \t\t"+dataTest2.getnumberOfRepeat()+"\t[szt.]\n");
        textfieldRaport1.append("Rozmiar początkowy paczki: \t\t"+dataTest2.getInitialSizePack()+"\t[bajt]\n");
        textfieldRaport1.append("Krok zwiększania rozmiaru\npaczki: \t\t\t"+dataTest2.getStepIncreasePack()+"\t[m]\n");
        textfieldRaport1.append("Ilość powtórzeń wysłania\npojedyńczej paczki o danym rozmiarze: \t"+dataTest2.getNuberRepeatSingleIteration()+"\t[m]\n");
    }//GEN-LAST:event_generateRaport2ActionPerformed
    private void pathTestFile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTestFile2ActionPerformed
    }//GEN-LAST:event_pathTestFile2ActionPerformed
    private void readDataFromFile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readDataFromFile2ActionPerformed
        try {
            readFile plik = new readFile(filepath);
            dataFromFile2= plik.OtworzPlik();
            int i;
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
        String subjectTest2[] = dataFromFile2[0].split(" ");
        String numberOfRepeat2[] = dataFromFile2[1].split("=");
        String initialSizePack2[] = dataFromFile2[2].split("=");
        String stepIncreasePack2[] = dataFromFile2[3].split("=");
        String numberRepeatSingleIteration[] = dataFromFile2[4].split("=");
        String id = null;
        String n = null;
        int nor = Integer.valueOf(numberOfRepeat2[1]);
        int isp = Integer.valueOf(initialSizePack2[1]);
        int sip =Integer.valueOf(stepIncreasePack2[1]);
        int nrsi =Integer.valueOf(numberRepeatSingleIteration[1]);
        String [][] measureData2 = new String[(dataFromFile2.length - 7)][7];
        //Czytanie danych pomiarowych do zmiennych OK oraz ERR
        int i;
        for(i= 0 ; i < dataFromFile2.length - 7;i++)
        {
            String temp[] = dataFromFile2[i+7].split(";");
            int j;
            for(j= 0 ; j < 7;j++)
            {
                measureData2[i][j] = temp[j];
            }
        }
        String [] tempStatusData = new String[(dataFromFile2.length - 7)];
        String [] tempSizePack = new String[(dataFromFile2.length - 7)];
        String [] tempTimePack = new String[(dataFromFile2.length - 7)];
        String [] tempNumberStep = new String[(dataFromFile2.length - 7)];
        for(i= 0 ; i < dataFromFile2.length - 7;i++)
        {
            tempSizePack[i] = measureData2[i][3];
            tempTimePack[i] = measureData2[i][4];
            tempStatusData[i] = measureData2[i][5];
            tempNumberStep[i] =measureData2[i][6];
        }
        measureData2 data2 = new measureData2(subjectTest2[0], subjectTest2[1], nor, isp, sip, nrsi, tempStatusData, tempTimePack, tempSizePack, tempNumberStep);
        dataTest2 = data2;
        generateChart2.setVisible(true);
        generateRaport2.setVisible(true);
        Float[][] chartData2 = data2.getdataTableForChart();
        //zabawa z danymi ;) - Na celu miałem złożyć do jednej tablicy dataTableForChart dane takie jak: (kolejno) Rozmiar,Średni Czas, Numer Kroku.Przy czym sprawdziłem tylko paczki które miały status OK i zapisałem kilka rekordów o tym samym numerze kroku w jeden rekord.
        String[] NumberOfStepTable = dataTest2.getNumberOfStepTable();
        String[] StatusTable = dataTest2.getStatusTable();
        String[] TimeTable = dataTest2.getTimeTable();
        String[] SizeTable = dataTest2.getSizeTable();
        float ttime[] = new float[dataTest2.getnumberOfRepeat()];
        float tsize[] = new float[dataTest2.getnumberOfRepeat()];
        float tnr[] = new float[dataTest2.getNuberRepeatSingleIteration()];
        float[][] dataTableForChart = new float[dataTest2.getnumberOfRepeat()][3];
        int kk = 0;
        int k = 0;
        i=0;
        int stepNumber;
        int tempStepNumber = Integer.parseInt(NumberOfStepTable[i]);
        for(i = 0; i < NumberOfStepTable.length; i++)
        {
            stepNumber = Integer.parseInt(NumberOfStepTable[i]);
            if(stepNumber == tempStepNumber)
            {
                 if(StatusTable[i].equalsIgnoreCase("OK"))
                 {
                    tsize[kk] = Float.parseFloat(SizeTable[i]);
                    if(kk == 0)
                    {
                        ttime[kk] = ttime[kk] + Float.parseFloat(TimeTable[i]);
                    }else{
                        ttime[kk] = ttime[kk-1] + Float.parseFloat(TimeTable[i]);
                    }
                    tnr[kk] = Float.parseFloat(NumberOfStepTable[i]);
                    kk = kk+1;
                 }
                 if(StatusTable[i].equalsIgnoreCase("ERR"))
                 {
                    tsize[kk] = Float.parseFloat(SizeTable[i]);
                    if(kk == 0)
                    {
                        ttime[kk] = ttime[kk];
                    }else{
                        ttime[kk] = ttime[kk-1];
                    }
                    tnr[kk] = Float.parseFloat(NumberOfStepTable[i]);
                    kk = kk+1;
                 }
                tempStepNumber = stepNumber;    
            }else if(stepNumber != tempStepNumber)
            {
                dataTableForChart[k][0] = (float)tsize[kk-1];
                dataTableForChart[k][1] = (float)ttime[kk-1]/(kk);
                dataTableForChart[k][2] = (float)tnr[kk-1];
                kk = 0;
                k = k+1;
                if(StatusTable[i].equalsIgnoreCase("OK"))
                 {
                    ttime[kk] = Float.parseFloat(TimeTable[i]);
                    if(kk == 0)
                    {
                        tsize[kk] = tsize[kk] + Float.parseFloat(SizeTable[i]);
                    }else{
                        tsize[kk] = tsize[kk-1] + Float.parseFloat(SizeTable[i]);
                    }
                    tnr[kk] = Float.parseFloat(NumberOfStepTable[i]);
                    kk = kk+1;
                    tempStepNumber = stepNumber;
                 }
                if(StatusTable[i].equalsIgnoreCase("ERR"))
                 {
                    tsize[kk] = Float.parseFloat(SizeTable[i]);
                    if(kk == 0)
                    {
                        ttime[kk] = ttime[kk];
                    }else{
                        ttime[kk] = ttime[kk-1];
                    }
                    tnr[kk] = Float.parseFloat(NumberOfStepTable[i]);
                    kk = kk+1;
                    tempStepNumber = stepNumber;
                 }
            }
        }
        dataTableForChart[k][0] = (float)tsize[kk-1];
        dataTableForChart[k][1] = (float)ttime[kk-1]/(kk);
        dataTableForChart[k][2] = (float)tnr[kk-1];
        dataTableForChartFinal = dataTableForChart;
    }//GEN-LAST:event_readDataFromFile2ActionPerformed
    private module findModule(String name){
        for(module m : arr){
            if(m.getName() == null ? name == null : m.getName().equals(name))
                return m;
        }
        return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
           new MainWindow().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseTextFilePath1;
    private javax.swing.JButton browseTextFilePath2;
    private javax.swing.JSpinner chanelCB;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JPanel chartPanel1;
    private javax.swing.JSpinner deviceIDCB;
    private javax.swing.JButton generateChart1;
    private javax.swing.JButton generateChart2;
    private javax.swing.JButton generateRaport1;
    private javax.swing.JButton generateRaport2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLayeredPane jLP1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JPanel konfiguracja;
    private javax.swing.JComboBox<String> modeCB;
    private javax.swing.JComboBox<String> moduleCB;
    private javax.swing.JLabel nrPortu;
    private javax.swing.JComboBox<String> nrPortuWartosc;
    private javax.swing.JComboBox<String> pTransmWartosc;
    private javax.swing.JPanel panel2;
    private javax.swing.JTextField pathTF;
    private javax.swing.JTextField pathTF1;
    private javax.swing.JTextField pathTestFile1;
    private javax.swing.JTextField pathTestFile2;
    private javax.swing.JButton polacz;
    private javax.swing.JLabel predkoscTransmisji;
    private javax.swing.JPanel raportPanel;
    private javax.swing.JPanel raportPanel1;
    private javax.swing.JButton readDataFromFile1;
    private javax.swing.JButton readDataFromFile2;
    private javax.swing.JPanel test1;
    private javax.swing.JPanel test3;
    private javax.swing.JPanel wizualizacja;
    private javax.swing.JButton zapiszParametry;
    // End of variables declaration//GEN-END:variables
}
